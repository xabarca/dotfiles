#! /bin/bash

# position in the folder the script is executing
cd `dirname $0`

PANEL_FIFO=/tmp/panel_bspwm_fifo
PANEL_WM_NAME=bspwm_panel

PANEL_HEIGHT=20

PANEL_FONT_0="Hack:pixelsize=14"
PANEL_FONT_1="Font Awesome 5 Free:style=Solid:pixelsize=13"
PANEL_FONT_4="icomoon:pixelsize=18"
PANEL_FONT_6="JetBrainsMono:size=10"

# load panel config
. panel_colors

# _______________________________
# _______________________________
_update() {
	case $1 in
		volume) _updateVolume ;;
		vpn) _updateVpn ;;
		all) _start ;;
		*) _start ;;
	esac
}

# -------------------------
# -------------------------
my_date() {
    while true; do
        echo "D""$($HOME/bin/dwm/dwm-bar-functions -d )"
        sleep 6h
    done
}

# -------------------------
# -------------------------
my_time() {
    while true; do
        echo "H""$($HOME/bin/dwm/dwm-bar-functions -t )"
        sleep 1m
    done
}

# -------------------------
# -------------------------
getVolume() {
    echo "V""$($HOME/bin/dwm/dwm-bar-functions -a )"
}

# -------------------------
# -------------------------
_updateVolume() {
	echo "$(getVolume)" >> "$PANEL_FIFO" &
}

# -------------------------
# -------------------------
getCmusInfo() {
    echo "$($HOME/bin/dwm/dwm-bar-functions -c )"
}

# -------------------------
# -------------------------
getVpnActive() {
    echo "A""$($HOME/bin/dwm/dwm-bar-functions -v )"
}

# -------------------------
# -------------------------
_updateVpn() {
	echo "$(getVpnActive)" > "$PANEL_FIFO" &
}

# -------------------------
# -------------------------
getCentralInfo() {
	while true; do
		echo "M""$(getCmusInfo)"
		sleep 20s
	done
}

# -------------------------
# -------------------------
getMem () {
	while true; do
        echo "R""$($HOME/bin/dwm/dwm-bar-functions -m )"
		sleep 1m
	done
}

# _______________________________
# _______________________________
_start() {
	# Check if any lemonbar is running and kill it
	if pgrep -xo lemonbar > /dev/null; then
		pkill -xo lemonbar
	fi

	if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
		printf "%s\n" "The panel is already running." >&2
		exit 1
	fi

	trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

	# create a new named pipe
	[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
	mkfifo "$PANEL_FIFO"

	# subscriptions
	my_date > "$PANEL_FIFO" &
	my_time > "$PANEL_FIFO" &
	getVolume > "$PANEL_FIFO" &
	getVpnActive > "$PANEL_FIFO" &
	getCentralInfo > "$PANEL_FIFO" &
	getMem > "$PANEL_FIFO" &
	bspc subscribe report > "$PANEL_FIFO" &

	# executes panel_bar to create the status line to the bar
	./panel_bar < "$PANEL_FIFO" | lemonbar -a 32 -u 0 -n "$PANEL_WM_NAME" -g x$PANEL_HEIGHT \
                 -f "$PANEL_FONT_0" -o 2 -f "$PANEL_FONT_1" -o 1  \
	              -F "$COLOR_DEFAULT_FG" -B "$COLOR_DEFAULT_BG" | sh &

	wid=$(xdo id -a "$PANEL_WM_NAME")
	xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

	wait
}


case $1 in
    start) _start ;;
    reload) _start ;;
	update) _update $2 ;;
    *) _start ;;
esac
